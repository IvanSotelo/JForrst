{"name":"Jforrst","tagline":"Plugin JQuery","body":"<img src=\"http://www.deskode.com/Downloads/LOGO.png\"  width=\"40%\" height=\"30%\">\r\n\r\nA jQuery plugin to fetch post and user info from the Forrst API\r\n\r\n## Dependencies\r\nFor normal usage; jQuery 1.3 or higher.\r\n\r\n## Usage\r\nJForrst makes available methods for retrieving post and user information from the Forrst.com API. All the available methods are accessed from the JForrst object which is a member of the jQuery or $ object.\r\n\r\n### Get User info\r\n$.jforrst.getUserInfo(username, callback)\r\n\r\n**Parameters**\r\n* > username string.\r\n* > callback FUNC Function to call once the request has completed successfully. One parameter will be passed containing the JSON response of the request; callback(data).\r\n\r\n**Example**\r\n```\r\n$.jforrst.getUserInfo(\"IvanSotelo\", function(data){\r\n    var html = [];\r\n\r\n    html.push('<a href=\"' + data.resp.url + '\"><img src=\"' +  data.resp.photos.large_url + '\" alt=\"\"></a>');\r\n    html.push('<div><h3>' + data.resp.name + '</h3>');\r\n    html.push('<h4><a href=\"' + data.resp.url + '\">' + data.resp.url + '</a></h4>');\r\n    html.push('<ul><li><b>Posts: </b>' + data.resp.posts + '</li>');\r\n    html.push('<li><b>Following: </b>' +  data.resp.following + '</li>');\r\n    html.push('<li><b>Followers: </b>' +  data.resp.followers + '</li>');\r\n    html.push('<li><b>Likes: </b>' +  data.resp.likes + '</li></ul></div>');\r\n\r\n    $('#userInfo').html(html.join(''));\r\n                });    \r\n```\r\n\r\n### Get a User Posts\r\n$.jforrst.getUserPosts(username, callback)\r\n\r\n**Parameters**\r\n* > username string.\r\n* > callback FUNC Function to call once the request has completed successfully. One parameter will be passed containing the JSON response of the request; callback(data).\r\n\r\n**Example**\r\n```\r\n$.jforrst.getUserPosts(\"IvanSotelo\", function(data){\r\n                    var html = [];\r\n\r\n                $.each(data.resp.posts, function (i, posts) {\r\n                    html.push('<li>');\r\n                    html.push('<div class=\"details\"><h3>' + posts.title + '</h3>');\r\n                    html.push('<h4>by <a href=\"' + posts.user.url + '\">' + posts.user.username + '</a></h4></div>');\r\n                    html.push('<a href=\"' + posts.post_url + '\" target=\"_blank\" class=\"linkc\">');\r\n                    html.push('<img src=\"' + posts.multiposts[1].snaps.mega_url + '\" alt=\"' + posts.title + '\">');\r\n                    html.push('</a></li>');\r\n                });\r\n    \r\n                $('#shotsListing').html(html.join(''));\r\n                }, {page: 1, per_page: 8\r\n                });    \r\n```\r\n\r\n### Get a Post\r\n$.jforrst.getPostsShow(postId, callback)\r\n\r\n**Parameters**\r\n* > postId INT The id of the post.\r\n* > callback FUNC Function to call once the request has completed successfully. One parameter will be passed containing the JSON response of the request; callback(data).\r\n\r\n**Example**\r\n```\r\n$.jforrst.getPostsShow(161803, function(data){\r\n    var html = [];\r\n\r\n    $('#postById a:first').attr('href', data.resp.post_url);\r\n    $('#postById img').attr('src', data.resp.multiposts[1].snaps.mega_url);\r\n    $('#postById h3').text(data.resp.title);\r\n    $('#postById h4').html('by <a href=\"' + data.resp.user.url + '\">' + data.resp.puser.name + '</a>');\r\n\r\n    html.push('<li><b>Views:</b> ' + data.resp.view_count + '</li>');\r\n    html.push('<li><b>Likes:</b> ' + data.resp.like_count + '</li>');\r\n    html.push('<li><b>Comments:</b> ' + data.resp.comment_count + '</li>');\r\n\r\n    $('#postById ul').html(html.join(''));\r\n                });    \r\n```\r\n\r\n### Get all Posts\r\n$.jforrst.getPostsAll(callback)\r\n\r\n**Parameters**\r\n* > callback FUNC Function to call once the request has completed successfully. One parameter will be passed containing the JSON response of the request; callback(data).\r\n\r\n**Example**\r\n```\r\n$.jforrst.getPostsAll(function(data){\r\n    var html = [];\r\n\r\n                $.each(data.resp.posts, function (i, posts) {\r\n                    html.push('<li>');\r\n                    html.push('<div class=\"details\"><h3>' + posts.title + '</h3>');\r\n                    html.push('<h4>by <a href=\"' + posts.user.url + '\">' + posts.user.username + '</a></h4></div>');\r\n                    html.push('<a href=\"' + posts.post_url + '\" target=\"_blank\" class=\"linkc\">');\r\n                    html.push('<img src=\"' + posts.multiposts[1].snaps.mega_url + '\" alt=\"' + posts.title + '\">');\r\n                    html.push('</a></li>');\r\n                });\r\n    \r\n                $('#shotsListing').html(html.join(''));\r\n                }, {page: 1, per_page: 8\r\n                });    \r\n```\r\n\r\n### Get Posts by List\r\n$.jforrst.getPostsList(postType,callback)\r\n\r\n**Parameters**\r\n* > postType STRING Can be one of: \"code\", \"snap\", \"link\", \"question\"\r\n* > callback FUNC Function to call once the request has completed successfully. One parameter will be passed containing the JSON response of the request; callback(data).\r\n\r\n**Example**\r\n```\r\n$.jforrst.getPostsList(\"snap\",function(data){\r\n    var html = [];\r\n\r\n                $.each(data.resp.posts, function (i, posts) {\r\n                    html.push('<li>');\r\n                    html.push('<div class=\"details\"><h3>' + posts.title + '</h3>');\r\n                    html.push('<h4>by <a href=\"' + posts.user.url + '\">' + posts.user.username + '</a></h4></div>');\r\n                    html.push('<a href=\"' + posts.post_url + '\" target=\"_blank\" class=\"linkc\">');\r\n                    html.push('<img src=\"' + posts.multiposts[1].snaps.mega_url + '\" alt=\"' + posts.title + '\">');\r\n                    html.push('</a></li>');\r\n                });\r\n    \r\n                $('#shotsListing').html(html.join(''));\r\n                }, {page: 1, per_page: 8\r\n                });    \r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}